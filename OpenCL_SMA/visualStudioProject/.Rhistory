setwd("C:/users/larkinan/desktop/cent_base.csv")
#setwd("S:/Restricted/PURE_AIR/WeeklyMeeting/MetaAnalysis/")
setwd("C:/users/larkinan/desktop")
library(mvmeta)
rawData <- read.csv("cent_base")
rawData <- read.csv("cent_base.csv")
install.packages("mvmeta")
library(mvmeta)
rawData <- read.csv("cent_base.csv")
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
}
outputData <- data.frame(uniqueOutcome,HR,ISquare,region)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
rawData <- read.csv("cent_base.csv")
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
data
subsetData <- subset(rawData, outcome == 'all')
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = subsetData)
summary(model)
subsetData <- subset(rawData, outcome == 'all')
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = subsetData)
rawData
subsetData <- subset(rawData, outcome == 'respdth')
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = subsetData)
summary(model)
exp(-0.4728)
exp(0.5884)
summary(model)
names(summary(model))
names(summary(model))$ci.level
summary(model)$ci.level
summary(model)[1]
names(summary(model)[1])
summary(model)[1][2]
summary(model)[1][1]
summary(model)[1][1]
summary(model)[1]
summary(model)$coefficients
summary(model)$coefficients[1]
summary(model)$coefficients[2]
summary(model)$coefficients[3]
names(summary(model)$coefficients)
summary(model)$coefficients[2]
summary(model)$coefficients[3]
summary(model)$coefficients[4]
summary(model)$coefficients[5]
summary(model)$coefficients[6]
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
HRLowerCI <- rep(0,length(uniqueOutcome))
HRUpperCI <- rep(0,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
HRLowerCI[i] <- exp(summary(model)$coefficients[5])
HRUpperCI[i] <- exp(summary(model)$coefficients[6])
}
outputData <- data.frame(uniqueOutcome,HR,ISquare,region)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
data
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
HRLowerCI <- rep(0,length(uniqueOutcome))
HRUpperCI <- rep(0,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
HRLowerCI[i] <- exp(summary(model)$coefficients[5])
HRUpperCI[i] <- exp(summary(model)$coefficients[6])
}
outputData <- data.frame(uniqueOutcome,HR,ISquare,region)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
data
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
HRLowerCI <- rep(0,length(uniqueOutcome))
HRUpperCI <- rep(0,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
HRLowerCI[i] <- exp(summary(model)$coefficients[5])
HRUpperCI[i] <- exp(summary(model)$coefficients[6])
}
outputData <- data.frame(uniqueOutcome,HR,HRLowerCI,HRUpperCI,ISquare,region)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
data
summary(model$qstat)
summary(model$)qstat
summary(model)$qstat
summary(model)$qstat$Q
summary(model)$qstat$pvalue
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
HRLowerCI <- rep(0,length(uniqueOutcome))
HRUpperCI <- rep(0,length(uniqueOutcome))
Qstatistic <- rep(0,length(uniqueOutcome))
QpValue <- rep(0,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
HRLowerCI[i] <- exp(summary(model)$coefficients[5])
HRUpperCI[i] <- exp(summary(model)$coefficients[6])
Qstatistic[i] <- summary(model)$qstat$Q
QpValue[i] <- summary(model)$qstat$pvalue
}
outputData <- data.frame(uniqueOutcome,region,HR,HRLowerCI,HRUpperCI,Qstatistic,QpValue,ISquare,)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
############### batch analysis ############
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
HRLowerCI <- rep(0,length(uniqueOutcome))
HRUpperCI <- rep(0,length(uniqueOutcome))
Qstatistic <- rep(0,length(uniqueOutcome))
QpValue <- rep(0,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
HRLowerCI[i] <- exp(summary(model)$coefficients[5])
HRUpperCI[i] <- exp(summary(model)$coefficients[6])
Qstatistic[i] <- summary(model)$qstat$Q
QpValue[i] <- summary(model)$qstat$pvalue
}
outputData <- data.frame(uniqueOutcome,region,HR,HRLowerCI,HRUpperCI,Qstatistic,QpValue,ISquare)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
}
data
summary(model)
multipleOutcomes <- function(rawData,region) {
uniqueOutcome <- unique(rawData$outcome)
HR <- rep(0,length(uniqueOutcome))
ISquare <- rep(0,length(uniqueOutcome))
region <- rep(region,length(uniqueOutcome))
HRLowerCI <- rep(0,length(uniqueOutcome))
HRUpperCI <- rep(0,length(uniqueOutcome))
Qstatistic <- rep(0,length(uniqueOutcome))
QpValue <- rep(0,length(uniqueOutcome))
numEvents <- rep(0,length(uniqueOutcome))
for(i in 1:length(uniqueOutcome)) {
outcomeSubset <- subset(rawData, outcome == uniqueOutcome[i])
model  <- mvmeta(Estimate ~ 1 , S=(StdErr)^2, method="reml", na.action="na.omit", data = outcomeSubset)
qStat <- as.numeric(as.numeric(summary(model)$qstat[1]))
ISquare[i] <- ((qStat - as.numeric(summary(model)$qstat[2]))/qStat)*100
if(ISquare[i] < 1) {
ISquare[i] <- 1
}
HR[i] <- exp(summary(model)$coefficient[1])
HRLowerCI[i] <- exp(summary(model)$coefficients[5])
HRUpperCI[i] <- exp(summary(model)$coefficients[6])
Qstatistic[i] <- summary(model)$qstat$Q
QpValue[i] <- summary(model)$qstat$pvalue
numEvents[i] <- sum(outcomeSubset$Event)
}
outputData <- data.frame(uniqueOutcome,region,HR,HRLowerCI,HRUpperCI,Qstatistic,QpValue,ISquare,numEvents)
return(outputData)
}
uniqueRegions <- unique(rawData$region)
data <- multipleOutcomes(rawData,'all')
for(j in 1:length(uniqueRegions)) {
subsetData <- subset(rawData,region == uniqueRegions[j])
tempData <- multipleOutcomes(subsetData,uniqueRegions[j])
data <- rbind(data,tempData)
write.csv(tempData,"outputdata.csv")
}
data
write.csv(tempData,"outputdata.csv")
write.csv(tempData,"outputdata.csv")
write.csv(data,"outputdata.csv")
setwd("I:/GreenspaceVirtualReality/OpenCL_SMA/visualStudioProject")
start.time <- Sys.time()
rawData <- read.csv("RCopy2.csv")
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
plot(as.factor(socialScore),as.factor(sentiment),col='red')
rawData$indicator <- rawData$sentiment > 15
plot(as.numeric(socialScore),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets",col=indicator)
rawData$indicator <- rawData$sentiment > 15
plot(as.numeric(social),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets",col=indicator)
attach(rawData)
rawData$indicator <- rawData$sentiment > 15
plot(as.numeric(social),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets",col=indicator)
names(rawData)
rawData$indicator <- rawData$sentiment > 15
plot(as.numeric(socialScore),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets",col=indicator)
rawData$indicator <- (rawData$sentiment > 15)*1
plot(as.numeric(socialScore),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets",col=indicator)
detach(rawData)
detach(rawData)
detach(rawData)
attach(rawData)
plot(as.numeric(socialScore),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets",col=indicator)
plot(as.numeric(socialScore),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets")
rawData[!duplicated(rawData),]
rawData2 <- rawData[!duplicated(rawData),]
detach(rawData)
detach(rawData)
attach(rawData2)
plot(as.numeric(socialScore),as.numeric(sentiment),xlab = 'Social Score (normalized)', ylab = "Sentiment (normalized)",main="Sentiment vs Normalized Scoial Scores in Greenspace-Related Tweets")
summary(rawData2)
